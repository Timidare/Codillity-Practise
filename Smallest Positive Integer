"""
Write a function:
def solution(A) that, given an array A of N integers, returns the smallest positive integer (greater than 0) that does not occur in A.
For example, given A = [1, 3, 6, 4, 1, 2], the function should return 5.
Given A = [1, 2, 3], the function should return 4.
Given A = [−1, −3], the function should return 1.
Write an efficient algorithm for the following assumptions:
N is an integer within the range [1..100,000]; each element of array A is an integer within the range [−1,000,000..1,000,000].

"""

A = [-1, -3, 6, 4, 1, 2]
def solution(A):
    missing = []    # empty list to catch integers missing as the count goes up from 1
    intfile = [int(item) for item in infile if item >= 0] # remove negative numbers
    
    if len(intfile) == 0:
       return print(1)
    else:
        for item in range(0 , max(A)+1):
            stepno = item + 1
            if stepno not in intfile:
                missing.append(stepno)
        print(min(missing))
        
        
solution(A)
